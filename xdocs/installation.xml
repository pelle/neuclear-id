<?xml version="1.0"?>
<document>

	<properties>
		<title>Installing</title>
		<author email="pelle@neubia.com">Pelle Braendgaard</author>
	</properties>

	<body>
        <section name="Requirements">
            <p>
                Any JRE 1.4 VM should work. <a href="http://www.java.com:80/en/download/manual.jsp">Get the latest for your platform straight from Sun</a>.
                If you are running Mac OS/X Jaguar or Panther you should already be set. Please let us know of any problems.
            </p>
            <p>
                 Download the <a href="http://neuclear.org/maven/neuclear-id/jars/neuclear-id-0.8-SNAPSHOT-uber.jar">NeuClear ID Executable</a>.
                 Excuse the long and ugly name, we will package it nicer later on. Currently this tool allows you to create a certificate and
                 sign it. The jar file also contains all the required libraries and should be suitable for unpacking and
                adding to your favorite IDE's classpath.
             </p>

        </section>
		<section name="Requirements for Building">
            <p>
                To build the NeuClear framework you first need to install <a href="http://maven.apache.org/">Maven</a>.
                Follow their installation instructions and you should be ok. I haven't tried this under windows yet, but I'm guessing
                it should work fine. Maven fetches all the required libraries you need the first time you attempt to build it. There are however
                two required libraries that are not yet part of their central repository. Some of the required libraries are not in maven's own repositories,
                we have our own maven repository at http://neuclear.org/maven/ and the project is setup to get all the latest from there.
            </p>
            <p>
                Simply unpack it in mavens home directory retaining the directory structure and you should be allright.
            </p>
            <p>
                If you want to get them yourself. Get the latest version of <a href="http://www.opensymphony.org">OSCore</a> and
                <a href="http://www.bouncycastle.org">Bouncy Castle Crypto</a>. For Bouncy Castle Crypto you need a JCE and a provider.
                If you're using JDK1.4 you will allready have a JCE. Otherwise the easiest thing todo is to get their combined JCE/Provider.
                I would also recommend getting the signed jar for your version of the JDK and install it as an extension in
                <tt>$JAVA_HOME/jre/lib/ext</tt>.
            </p>
            <p>
                Remember to edit your <tt>$JAVA_HOME/jre/lib/security/java.security</tt> file as well. Adding the following line:
            </p>
            <source>
security.provider.6=org.bouncycastle.jce.provider.BouncyCastleProvider
            </source>
            <p>Making sure to change the 6 to whatever the last number is in the sequence of providers</p>
            <p>
                In Addition to play around with it you will need a J2EE compliant servlet engine such as <a href="http://jakarta.apache.org/tomcat/">Jakarta Tomcat</a>
                or <a href="http://jetty.mortbay.org">Jetty</a>. Install this as required.
            </p>
        </section>
        <section name="Building">
            <p>
                Unpack the source and binary distributions. Familiarise yourself a bit with maven. It's a bit different than ant, but
                very easy to learn. To see the options available go to the type:
            </p>
            <source>~/projects/neuclear-id> maven -g</source>
            <p>
                Of these the most important one is to simply type:
            </p>
            <source>~/projects/neuclear-id> maven war</source>
            <p>
                This should build everything and create a neuclear-id.war file in <tt>target/</tt>. You can then deploy
                this war file in your J2EE compliant servlet engine. eg. place it in tomcat or jetty's <tt>webapps/</tt> directory
                and restart.
            </p>
        </section>
    </body>
</document>